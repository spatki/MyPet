@using ProcessAccelerator.WebUI
@using Omu.AwesomeMvc
@using System.Linq;
@model tbl_process_checklistInput
@{
    Layout = null;
    var itemID = 0;
    var groupID = 0;
}
@Html.Action("BreadCrump", "Menu", new { id = ViewBag.FunctionID })
<div class="row">
    <div class="panel colored col-md-12">
        <div class="panel-heading orange-bg">
            <h3 class="panel-title">Edit New Checklist</h3>
        </div>
					
		<form role="form" class="left-label form-wysiwyg" id="newChecklist" action="@Url.Action("Edit")">

            <div class="panel-body" id="procDef">						
                @Html.ValidationSummary(true)
                <div class="row col-md-12">
                    <div class="col-md-12">
                        <div class="form-group">
                            <input type="hidden" value="@Model.CreateDate.ToString(Globals.DateFormatString)" name="CreateDate" id="CreateDate" />
                            @Html.HiddenFor(o => o.CreatedBy)
                            <input type="hidden" value="@(Model.UpdateDate == null ? "" : Model.UpdateDate.GetValueOrDefault().ToString(Globals.DateFormatString))" name="UpdateDate" id="UpdateDate" />
                            @Html.HiddenFor(o => o.UpdatedBy)
                            @Html.HiddenFor(o => o.ReviewedBy)
                            <input type="hidden" value="@(Model.ReviewDate == null ? "" : Model.ReviewDate.GetValueOrDefault().ToString(Globals.DateFormatString))" name="ReviewDate" id="UpdateDate" />
                            <input type="hidden" value="@(Model.PublishDate == null ? "" : Model.PublishDate.GetValueOrDefault().ToString(Globals.DateFormatString))" name="PublishDate" id="PublishDate" />
                            @Html.HiddenFor(o => o.Tailored)
                            @Html.HiddenFor(o => o.TailorComments)
                            @Html.HiddenFor(o => o.AvailableToAll)
                            @Html.HiddenFor(o => o.mstr_Process_LC_StatusID)
                            @Html.Hidden("type", "chklst")
                            <input type="hidden" name="tbl_process_chklst_revision.Index" value="1" />
                            <input type="hidden" name="tbl_process_chklst_revision[1].RevisionUser" value="@Model.UpdatedBy" />
                            <input type="hidden" name="tbl_process_chklst_revision[1].mstr_Process_LC_StatusID" value="@Model.tbl_process_chklst_revision.LastOrDefault().mstr_Process_LC_StatusID" />
                            <input type="hidden" name="tbl_process_chklst_revision[1].RevisionDate" value="@DateTime.Now.Date.ToString(Globals.DateFormatString)" />
                            <input type="hidden" name="tbl_process_chklst_revision[1].Comments" id="formReviewComments" value="@Model.tbl_process_chklst_revision.LastOrDefault().Comments" />
                            <label>Checklist Name</label>
                            <div class="controls">
                                @Html.TextBoxFor(o => o.Name, new { @class = "form-control" })
                                @Html.ValidationMessageFor(o => o.Name)
                            </div>
                        </div>
                    </div>                            
                </div>
                <div class="row col-md-12">
                    <div class="col-md-12">
                	    <div class="panel colored">
                        <div class="panel-heading blue-bg">
                            <h3 class="panel-title">Checklist Column Heading - Settings</h3>
                            <ul class="pull-right toolbar">
                                <li><a href="#" class="icon-button mini-max"><i class="icon-">&#xf0aa;</i></a></li>
                            </ul>
                        </div>
                        <div class="panel-body clearfix">
                        
                            <table cellpadding="0" cellspacing="0" border="0" class="table table-bordered table-hover editableTable" id="heading1">
                                <thead>
                                    <tr>
                                        <th>Action</th>
                                        <th>SNO</th>
                                        <th>Checkpoint</th>
                                        <th>Result</th>
                                        <th>Remarks</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                            <td data-width="20px" >Custom Heading</td> 
                                            <td data-width="2px" id="SNO">
                                                @Html.TextBoxFor(o => o.C_SNO, new { @class = "form-control col-md-12" })
                                                @Html.ValidationMessageFor(o => o.C_SNO)
                                            </td>
                                            <td data-width="2px" id="CP">
                                                @Html.TextBoxFor(o => o.C_ChkPt, new { @class = "form-control col-md-12" })
                                                @Html.ValidationMessageFor(o => o.C_ChkPt)
                                            </td>
                                            <td data-width="2px" id="Result">
                                                @Html.TextBoxFor(o => o.C_Result, new { @class = "form-control col-md-12" })
                                                @Html.ValidationMessageFor(o => o.C_Result)
                                            </td>
                                            <td data-width="2px" id="Remarks">
                                                @Html.TextBoxFor(o => o.C_Remarks, new { @class = "form-control col-md-12" })
                                                @Html.ValidationMessageFor(o => o.C_Remarks)
                                            </td>
                                    </tr>
                         
                                    <tr>
                                            <td class="NoEdit">Custom Width</td> 
                                            <td data-width="2px">
                                                @Html.TextBoxFor(o => o.C_SNO_Len, new { @class = "form-control col-md-12" })
                                                @Html.ValidationMessageFor(o => o.C_SNO_Len)
                                            </td> 
                                            <td data-width="2px">
                                                @Html.TextBoxFor(o => o.C_ChkPt_Len, new { @class = "form-control col-md-12" })
                                                @Html.ValidationMessageFor(o => o.C_ChkPt_Len)
                                            </td> 
                                            <td data-width="2px">
                                                @Html.TextBoxFor(o => o.C_Result_Len, new { @class = "form-control col-md-12" })
                                                @Html.ValidationMessageFor(o => o.C_Result_Len)
                                            </td> 
                                            <td data-width="2px">
                                                @Html.TextBoxFor(o => o.C_Remarks_Len, new { @class = "form-control col-md-12" })
                                                @Html.ValidationMessageFor(o => o.C_Remarks_Len)
                                            </td> 
                                    </tr>													 
                                </tbody>
                            </table>
                       
                        </div>
                        </div>
                    </div>                
        	    </div>

                @{seededChklstItems items = new seededChklstItems { seed = null, isParent = true, tbl_process_chklst_item = Model.tbl_process_chklst_item, tbl_process_chklst_group = Model.tbl_process_chklst_group };
                  if (Model.tbl_process_chklst_item.Any())
                  {
                      itemID = Model.tbl_process_chklst_item.OrderBy(o => o.ID).Last().ID + 1;
                  }
                  else
                  {
                      itemID = 1;
                  }

                  if (Model.tbl_process_chklst_group.Any())
                  {
                      groupID = Model.tbl_process_chklst_group.OrderBy(o => o.ID).Last().ID + 1;
                  }
                  else
                  {
                      groupID = 2;
                  }
                  }
                <div class="col-md-12 column left" id="items" data-nextitemid="@itemID" data-nextgroupid="@groupID">     <!-- Load updated values for nextid and nextsequence in viewbag -->
                  @{  var groups = Model.tbl_process_chklst_group.Where(o => o.Level == 1).OrderBy(o => o.SequenceNo); }  
                    <!-- Checklist Header -->
                        <div class="col-md-12">
                            <div class="col-md-1 Check_Header">Action</div>
                            <div class="col-md-5 Check_Header"><span class="CP_header">Checkpoint</span></div>
                            <div class="col-md-3 Check_Header"><span class="Result_header">Result</span></div>
                            <div class="col-md-3 Check_Header"><span class="Remarks_header">Remarks</span></div>
                        </div>
                    <ul id="DefaultDocNode" data-groupid="null"  class="sortable-list tree">
                        @{
                            var itemsInDoc = Model.tbl_process_chklst_item.Where(o => o.tbl_Process_Chklst_GroupID == null).OrderBy(o => o.SequenceNo).GetEnumerator(); // Begin with the root
                            var groupsInDoc = Model.tbl_process_chklst_group.Where(o => o.Level == 1).OrderBy(o => o.SequenceNo).GetEnumerator();
                            var sequence = 0;   // ****** Check whether needed and then discard
                            var itemSequence = 0; // First sequence in Checklist Items
                            var groupSequence = 0; // First sequence in Group
                            var keepProcessing = true;
                            var itemsFound = true;
                            var groupsFound = true;

                            if (itemsInDoc.MoveNext()) { itemSequence = itemsInDoc.Current.SequenceNo; } else { itemsFound = false; }
                            if (groupsInDoc.MoveNext()) { groupSequence = groupsInDoc.Current.SequenceNo; } else { groupsFound = false; }
                            if (!itemsFound && !groupsFound) { keepProcessing = false; }   // No need to continue processing

                            if (keepProcessing)
                            {
                                while (keepProcessing)    // Handling sequence of groups and items under this group. As the sequence can be intermixed
                                {
                                    // If the item comes first in sequence, print the item first
                                    if (itemsFound && (!groupsFound || itemSequence < groupSequence))
                                    {
                                        sequence = sequence + 1;
                                        <li class="MainSection" id="Item@(itemsInDoc.Current.ID)">
                                            <input type="hidden" name="tbl_process_chklst_item.Index" value="@(itemsInDoc.Current.ID)" />
                                            <input type="hidden" name="tbl_process_chklst_item[@(itemsInDoc.Current.ID)].ID" value="@(itemsInDoc.Current.ID)" />
                                            <input type="hidden" name="tbl_process_chklst_item[@(itemsInDoc.Current.ID)].SequenceNo" class="sequence" value="@(itemsInDoc.Current.SequenceNo)" />
                                            <input type="hidden" name="tbl_process_chklst_item[@(itemsInDoc.Current.ID)].tbl_Process_ChecklistID" value="@(itemsInDoc.Current.tbl_Process_ChecklistID)" />
                                            <input type="hidden" name="tbl_process_chklst_item[@(itemsInDoc.Current.ID)].tbl_Process_Chklst_GroupID" class="Parent" data-lnode="Item@(itemsInDoc.Current.ID)" value="@(itemsInDoc.Current.tbl_Process_Chklst_GroupID)" />
                                            <input type="hidden" name="tbl_process_chklst_item[@(itemsInDoc.Current.ID)].ItemDescription" value="@(itemsInDoc.Current.ItemDescription)" id="Check@(itemsInDoc.Current.ID)_CPinput"/>
                                            <input type="hidden" name="tbl_process_chklst_item[@(itemsInDoc.Current.ID)].Remarks" value="@(itemsInDoc.Current.Remarks)" id="Check@(itemsInDoc.Current.ID)_Remarksinput"/>
                                            <div class="sortable-item row">
                                                <div class="col-md-1 CheckItem"><a href="#" class="icon-button confirmAction" data-messagetitle="Confirm Deletion" data-message="Do you want to delete this check item ?" data-class="removeItem" data-classparams="data-id='@(itemsInDoc.Current.ID)'" data-id="Check@(itemsInDoc.Current.ID)"><i class="icon-">&#xf05c</i></a></div>
                                                <div class="col-md-5">
                                                    <div class="col-md-12 EditEditor CheckItem" data-width="20px" id="Check@(itemsInDoc.Current.ID)_CP" contenteditable="true"> @Html.Raw(itemsInDoc.Current.ItemDescription)</div>
                                                    <div>@Html.ValidationMessage("tbl_process_chklst_item[" + itemsInDoc.Current.ID + "].ItemDescription")</div>
                                                </div>
                                                <div class="col-md-3 CheckItem" data-width="20px">
                                                    <select data-placeholder="Choose Results" class="col-md-12 chzn-nopadd resultOptions" multiple id="Check@(itemsInDoc.Current.ID)_Result" name="tbl_process_chklst_item[@(itemsInDoc.Current.ID)].ChklstOptionList">
                                                        <option value="1" @(itemsInDoc.Current.ChklstOptionList.Exists(o => o.Equals("1")) ? "selected='selected'" : "")>Yes</option>
                                                        <option value="2" @(itemsInDoc.Current.ChklstOptionList.Exists(o => o.Equals("2")) ? "selected='selected'" : "")>No</option>
                                                        <option value="3" @(itemsInDoc.Current.ChklstOptionList.Exists(o => o.Equals("3")) ? "selected='selected'" : "")>NA</option>
                                                    </select>
                                                    <span class="field-validation-error" data-valmsg-replace="true" data-val-msg-for="tbl_process_chklst_item[@(itemsInDoc.Current.ID)].ChklstOptionList">@((itemsInDoc.Current.ChklstOptionList == null || itemsInDoc.Current.ChklstOptionList.Count() <= 0) ? "Select Option(s)" : "")</span>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="col-md-12 EditEditor CheckItem" data-width="20px" id="Check@(itemsInDoc.Current.ID)_Remarks" data-navkey="NoEdit"  contenteditable="true">@Html.Raw(itemsInDoc.Current.Remarks)</div>
                                                    <div>@Html.ValidationMessage("tbl_process_chklst_item[" + itemsInDoc.Current.ID + "].Remarks")</div>
                                                </div>
                                            </div>
                                        </li>
                                        if (itemsInDoc.MoveNext()) { itemSequence = itemsInDoc.Current.SequenceNo; } else { itemsFound = false; }  // Get the next item                                        
                                    }

                                    if (groupsFound && (!itemsFound || groupSequence < itemSequence))
                                    {
                                        sequence = sequence + 1;
                                        items.seed = groupsInDoc.Current.ID;
                                        items.sequence = sequence;
                                        items.isParent = false;
                                        items.sequencePrefix = "";
                                        @Html.Partial("_showItems", items)
                                        if (groupsInDoc.MoveNext()) { groupSequence = groupsInDoc.Current.SequenceNo; } else { groupsFound = false; }
                                    }
                                    if (!itemsFound && !groupsFound) { keepProcessing = false; }   // No need to continue processing                  
                                }
                            }
                        }
                      <li id="LnewNode">
                            <div class="row">
                                <div class="col-md-1 NoEdit CheckItem" data-width="2px"><a href="javascript:;" class="newItem" data-parent="0" data-proc="@(Model.ID)"  data-type="chklst"><i class="icon-">&#xf055</i></a></div>
                                <div class="col-md-11 CheckItem" data-width="20px" >Click to add checkpoints without any grouping</div>
                            </div>
                          <a class="tree-toggle addGroup" href="javascript:;" data-toggle="modal" data-parent="0" id="newNode" data-proc="0" data-type="chklst">Add Group</a> <!-- option to add more groups -->
                      </li>
                    </ul>
                </div>
                <div class="col-md-12 navbar-fixed-bottom pull-right">
                    <div class="row pull-right panel-footer">
                        <div class="col-md-12 col-md-offset-1">
                        <button type="button" class="btn blue-bg preview" data-url="@Url.Action("Preview")" data-form="newChecklist">Preview</button>
                        <button type="button" class="btn blue-bg saveDefaultWithoutReview" data-form="newChecklist" data-id="containerDetails" data-message="Checklist Saved">Save</button>
                        <button type="button" class="btn blue-bg captureRevisionComments" data-toggle="modal">Save Version</button>
                        <a href="javascript:" class="btn blue-bg subMenu" data-source="@Url.Action("Index", "PChecklist")">Back</a>
                        </div>
                    </div>
                </div>
                </div>

                <!-- Revision Comments to be shown just before the data is submitted for save -->
                <div class="modal fade" id="saveRevisionComments" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
	                    <div class="modal-content">
	                        <div class="modal-header">
		                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
		                        <h4 class="modal-title" id="dialogTitle">Revision History</h4>
	                        </div>
                            <div class="modal-body"> 
                                <div class="row">
                                    <div class="form-group col-md-6">
                                        <label class="control-label"><b>User:</b></label>
                                        <label class="control-label">@Model.UpdatedByName</label>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label class="control-label"><b>Create Date: </b></label>
                                        <label class="control-label">@Model.CreateDate.ToString(Globals.DateFormatString)</label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-md-12">
                                        <label class="control-label"><b>Event: </b></label>
                                        <label class="control-label">Updated</label>
                                    </div>
                                </div>
                                <hr />
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label class="col-md-12"><b>Review Comments</b></label>
                                            <textarea class="col-md-12" rows="5" id="reviewComments" name="reviewComments">@Model.tbl_process_chklst_revision.LastOrDefault().Comments</textarea>                    
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
		                      <button type="button" class="btn gray-bg" data-dismiss="modal">Cancel</button>
		                      <button type="button" class="btn blue-bg saveDefaultWithReview" data-form="newChecklist" data-id="containerDetails" data-message="Checklist Saved">Save</button>
		                    </div>
	                  </div><!-- /.modal-content -->
	                </div><!-- /.modal-dialog -->
                </div><!-- /.modal -->

		</form>			
    </div>  
</div>          

<!-- Add new group Modal -->
<div class="modal fade" id="addGroupDialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
<div class="modal-dialog">
	<div class="modal-content">
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
		<h4 class="modal-title">Enter New Group Name</h4>
	</div>
	<div class="modal-body">
  		<div class="row">
		<div class="col-md-12">
		<h4>Group Name </h4>
        <input type="text" class="col-md-12 form-control" id="newGrpName"/>
        <input type="hidden" name="NewNodeID" id="NewNodeID" value="Preset" />
        <input type="hidden" name="ParentNodeID" id="ParentNodeID" value="null" />
        <input type="hidden" name="Nodelevel" id="Nodelevel" value="1" />
        <input type="hidden" name="NodeProc" id="NodeProc" value="0" />
		</div>
		</div>
    </div>
	<div class="modal-footer">
		<button type="button" class="btn gray-bg" data-dismiss="modal">Close</button>
		<button type="button" class="btn blue-bg addNewGroup" data-mode="root" data-dismiss="modal">Save changes</button>
	</div>
	</div><!-- /.modal-content -->
</div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div class="modal fade" id="editGroupDialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
<div class="modal-dialog">
	<div class="modal-content">
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
		<h4 class="modal-title">Edit Group</h4>
	</div>
	<div class="modal-body">
  		<div class="row">
		<div class="col-md-12">
		    <h4>Group Name </h4>
            <input type="text" class="col-md-12 form-control" id="editGrpName"/>
            <input type="hidden" name="editNodeID" id="editNodeID" value="Preset" />
            <input type="hidden" name="editParentNodeID" id="editParentNodeID" value="0" />
            <input type="hidden" name="editlevel" id="editlevel" value="1" />
            <input type="hidden" name="editNodeProc" id="editNodeProc" value="0" />
            <p>Select editing options below</p>
		</div>
		</div>
    </div>
	<div class="modal-footer">
		  <button type="button" class="btn gray-bg" data-dismiss="modal">Cancel</button>
		  <button type="button" class="btn blue-bg deleteGroup" data-dismiss="modal">Delete this Group</button>
		  <button type="button" class="btn blue-bg saveGroup" data-dismiss="modal">Save</button>
		  <button type="button" class="btn blue-bg addSubGroup" data-mode="sub" data-dismiss="modal" data-parent="0">Add as Sub-Group</button>
	</div>
	</div><!-- /.modal-content -->
</div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<script type="text/javascript">
    $(document).ready(function () {
        @if (itemID > 1)
        {
            <text>
        configureInlineCkEditor(".EditEditor");
        //configureCkSmallEditor(".itemDetail");
        //configureCkEditor(".itemDetail");
            specialDropDown(".resultOptions");
            </text>
        }
        $(".sortable-list").sortable({ cancel: ".EditEditor", connectWith: '.sortable-list' });
    });

</script>
