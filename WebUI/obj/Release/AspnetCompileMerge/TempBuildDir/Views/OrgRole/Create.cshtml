@using Omu.AwesomeMvc
@model mstr_org_roleInput
@{
    Layout = null;
}
<div class="modal-dialog">
	<div class="modal-content">
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
		<h4 class="modal-title" id="dialogTitle">Create New Role</h4>
	</div>
    <form method="post" action="@Url.Action("Create")" id="submitLevel">
        <div class="modal-body"> 
            @Html.ValidationSummary(true)
		    <div class="row">
			    <div class="col-md-12">
                        <div class="form-group">    
                            <label>Short Name</label>
                            @Html.TextBoxFor(o => o.ShortName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(o => o.ShortName)
                        </div>
                        <div class="form-group">
                            <label>Long Name</label>
                            @Html.TextBoxFor(o => o.LongName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(o => o.LongName)
                        </div>
                        <div class="form-group">
                            <label class="control-label">Description</label>
                            @Html.TextAreaFor(o => o.Description, new { @class = "form-control" })
                            @Html.ValidationMessageFor(o => o.Description)
                        </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Role Type</label>
                            @Html.DropDownListFor(o => o.Type, (new RoleTypes()).getList(Model.Type), "Select ...", new { @class = "col-md-12 form-control specialCombo" })
                            @Html.ValidationMessageFor(o => o.Type)
                        </div>
                        <div class="form-group">    
                            &nbsp;
                        </div>
                        <div class="form-group">    
                            <label class="control-label">Process Role Mapping</label>
                            @Html.Action("getRoles","PRole",new { selectedItem = Model.mstr_Primary_Process_RoleID.GetValueOrDefault(), controlName = "mstr_Primary_Process_RoleID", excludeIds = "", includeIds = "" })
                            @Html.ValidationMessageFor(o => o.mstr_Primary_Process_RoleID)
                        </div>
                </div>
                <div class="col-md-6">
                        <div class="form-group">
                            @Html.CheckBox("Project_Approver",Model.Project_Approver.GetValueOrDefault()) <label class="control-label">Project Approver</label>
                        </div>
                        <div class="form-group">
                            @Html.CheckBox("Project_Reviewer", Model.Project_Reviewer.GetValueOrDefault())&nbsp;<label class="control-label">Project Reviewer</label>
                        </div>
                        <div class="form-group">
                            @Html.CheckBox("Dept_Reporting",Model.Dept_Reporting.GetValueOrDefault()) <label class="control-label">Department Manager</label>
                        </div>
                        <div class="form-group">
                            @Html.CheckBox("HR_Reporting", Model.HR_Reporting.GetValueOrDefault())&nbsp;<label class="control-label">HR Manager</label>
                        </div>
			    </div>	
		    </div>
	    </div>
	    <div class="modal-footer">
			<div class="form-group">
		        <button type="button" class="btn gray-bg" data-dismiss="modal">Cancel</button>
		        <button type="button" class="btn blue-bg saveDefault" data-mode="add" data-id="listing" data-form="submitLevel">Save</button>
			</div>
	    </div>
    </form>
	</div><!-- /.modal-content -->
</div><!-- /.modal-dialog -->

<script type="text/javascript">
   // specialDropDown (".specialCombo")
</script>
