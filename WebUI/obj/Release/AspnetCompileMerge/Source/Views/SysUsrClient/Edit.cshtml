@model UserProfileInput
@{
    Layout = null;
}
<div class="modal-dialog">
	<div class="modal-content">
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
		<h4 class="modal-title" id="dialogTitle">Edit User</h4>
	</div>
    <form method="post" action="@Url.Action("Create")" id="submitLevel">
        <div class="modal-body"> 
            @Html.ValidationSummary(true)
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label>User Type</label>
                        <div class="controls">
                            <input type="hidden" name="ID" id="ID" value="@Model.ID" />
                            @Html.DropDownListFor(o => o.UserType, (new UserTypes()).getList(Model.UserType.GetValueOrDefault()), "Select ...", new { @class = "col-md-12 form-control" })
                            @Html.ValidationMessageFor(o => o.UserType)
                        </div>
                    </div>
                </div>
                            
                <div class="col-md-6"  id="refCode">
                    <label class="control-label">Ref.Code</label>
                    <div >
                        <div class="input-group">
                        <input type="text" class="form-control" name="RefCode" id="RefCode" value="@Model.RefCode">
                        @Html.HiddenFor(o => o.ClientID)
						<div class="input-group-btn">
                        <a href="javascript:;" class="btn btn-med blue-bg searchEmployee"><i class="icon-search"></i></a>
						</div>
                        </div>
                        <span class="help-block"><i class="icon-">&#xf05a;</i> Based on the user type. Employee code for employees, client code for clients</span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                    <label class="control-label">User Name</label>
                        <div class="controls">
                            @Html.TextBoxFor(o => o.DisplayName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(o => o.DisplayName)
                        </div>
                    </div>
                </div>
                            
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Email ID&nbsp;&nbsp;<small>(Will be used as login id)</small></label>
                        <div class="controls">
                            @Html.TextBoxFor(o => o.UserName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(o => o.UserName)
                            <input type="hidden" name="Password" id="Password" value="somepassword" />
                            <input type="hidden" name="ConfirmPassword" id="ConfirmPassword" value="somepassword" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label>User Role</label>
                        <div class="controls">
                             @Html.Action("getMultiSelectListFor","SysRole",new { selectedItem = Model.Roles.ToList<int>() , controlName = "Role", excludeIds = "", selectIds = "", reload = "", client = Model.ClientID})
                        </div>
                    </div>
                </div>
                            
                <div class="col-md-6">
                    <div class="form-group">
                    <label>Status</label>
                    <div class="controls">
                        @Html.Action("getStatusFor","ProcessLCStatus",new { selectedItem = Model.mstr_Process_LC_StatusID.GetValueOrDefault(), controlName = "mstr_Process_LC_StatusID", excludeIds = "", includeIds = "", reload = "", Type = 8, DefaultSelection = false})
                    </div>
                    </div>
                </div>
            </div>
	    </div>
	    <div class="modal-footer">
			<div class="form-group">
		        <button type="button" class="btn gray-bg" data-dismiss="modal">Cancel</button>
		        <button type="button" class="btn blue-bg saveDefault" data-mode="add" data-id="listing" data-form="submitLevel">Save</button>
			</div>
	    </div>
    </form>
	</div><!-- /.modal-content -->
</div><!-- /.modal-dialog -->

